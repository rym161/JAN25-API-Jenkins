{
	"info": {
		"_postman_id": "c4c784e7-7efa-4c67-958d-26eeffd7a1eb",
		"name": "ASK-tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36905197",
		"_collection_link": "https://www.postman.com/material-participant-40111160/workspace/jan25/collection/36905197-c4c784e7-7efa-4c67-958d-26eeffd7a1eb?action=share&source=collection_link&creator=36905197"
	},
	"item": [
		{
			"name": "/sign-in-[T]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 1000\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"verify user role = TEACHER\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"TEACHER\");\r",
							"});\r",
							"\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"tokenTeacher\", jsonData.token);\r",
							"pm.environment.set(\"studentId\", jsonData.user.id)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{vault:authorization-secret}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"vaxehi6562@andinews.com\",\r\n  \"password\": \"aqw123zsx\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/sign-in",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"sign-in"
					]
				}
			},
			"response": []
		},
		{
			"name": "/sign-in-[S]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"response Body matches string - STUDENT\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"STUDENT\");\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"tokenStudent\", jsonData.token);\r",
							"\r",
							"pm.environment.set(\"studentId\", jsonData.user.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{vault:authorization-secret}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"sijeci7986@bmixr.com\",\r\n  \"password\": \"abc123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/sign-in",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"sign-in"
					]
				}
			},
			"response": []
		},
		{
			"name": "/quiz-[T]-NEWquiz",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData=pm.response.json();\r",
							"\r",
							"pm.environment.set(\"quizId\", jsonData.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenTeacher}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Demo REM Quiz 2.0\",\r\n  \"totalScore\": 18,\r\n  \"passingPercentage\": 75,\r\n  \"showStopperQuestion\": 1,\r\n  \"questions\": [\r\n    {\r\n      \"type\": \"TEXTUAL\",\r\n      \"question\": \"What is your name?\",\r\n      \"score\": 5\r\n    },\r\n    {\r\n      \"type\": \"SINGLE_CHOICE\",\r\n      \"question\": \"Which city is city largest in California?\",\r\n      \"score\": 7,\r\n      \"answer\": 2,\r\n      \"hasOtherOption\": false,\r\n      \"options\": [\r\n        \"San Francisco\",\r\n        \"Sacramento\",\r\n        \"Los Angeles\",\r\n        \"Redding\"\r\n      ]\r\n    },\r\n    {\r\n      \"type\": \"MULTIPLE_CHOICE\",\r\n      \"question\": \"Who was apple founded by?\",\r\n      \"score\": 6,\r\n      \"answers\": [\r\n        0,\r\n        1,\r\n        2\r\n      ],\r\n      \"hasOtherOption\": true,\r\n      \"options\": [\r\n        \"Steve Jobs\",\r\n        \"Steve Wozniak\",\r\n        \"Ronald Wayne\",\r\n        \"Ronald Reagan\"\r\n      ]\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/quiz",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"quiz"
					]
				}
			},
			"response": []
		},
		{
			"name": "/quiz-[T]-UPDATEquiz",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenTeacher}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Demo REM Quiz 2.0\",\r\n  \"totalScore\": 18,\r\n  \"passingPercentage\": 75,\r\n  \"showStopperQuestion\": 1,\r\n  \"questions\": [\r\n    {\r\n      \"type\": \"TEXTUAL\",\r\n      \"question\": \"What is your name?\",\r\n      \"score\": 5\r\n    },\r\n    {\r\n      \"type\": \"SINGLE_CHOICE\",\r\n      \"question\": \"Which city is city largest in California?\",\r\n      \"score\": 7,\r\n      \"answer\": 2,\r\n      \"hasOtherOption\": false,\r\n      \"options\": [\r\n        \"San Francisco\",\r\n        \"Sacramento\",\r\n        \"Los Angeles\",\r\n        \"Redding\"\r\n      ]\r\n    },\r\n    {\r\n      \"type\": \"MULTIPLE_CHOICE\",\r\n      \"question\": \"Who was apple founded by?\",\r\n      \"score\": 6,\r\n      \"answers\": [\r\n        0,\r\n        1,\r\n        2\r\n      ],\r\n      \"hasOtherOption\": true,\r\n      \"options\": [\r\n        \"Steve Jobs\",\r\n        \"Steve Wozniak\",\r\n        \"Ronald Wayne\",\r\n        \"Ronald Reagan\"\r\n      ]\r\n    }\r\n  ],\r\n  \"id\": {{quizId}}\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/quiz",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"quiz"
					]
				}
			},
			"response": []
		},
		{
			"name": "/quizzes-[T]-LISTofQuizzes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var myquiz = pm.environment.get(\"quizId\");\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"verify quiz id on the list of quizzes\", function () {\r",
							"\tvar jsonData = pm.response.json();\r",
							"\tpm.expect(jsonData[jsonData.length-1].id).to.eql(myquiz);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenTeacher}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"name\": \"Demo REM Quiz\",\r\n    \"totalScore\": 18,\r\n    \"passingPercentage\": 75,\r\n    \"showStopperQuestion\": 1,\r\n    \"questions\": [\r\n      {\r\n        \"type\": \"TEXTUAL\",\r\n        \"question\": \"What is your name?\",\r\n        \"score\": 5\r\n      },\r\n      {\r\n        \"type\": \"SINGLE_CHOICE\",\r\n        \"question\": \"Which city is city largest in California?\",\r\n        \"score\": 7,\r\n        \"answer\": 2,\r\n        \"hasOtherOption\": false,\r\n        \"options\": [\r\n          \"San Francisco\",\r\n          \"Sacramento\",\r\n          \"Los Angeles\",\r\n          \"Redding\"\r\n        ]\r\n      },\r\n      {\r\n        \"type\": \"MULTIPLE_CHOICE\",\r\n        \"question\": \"Who was apple founded by?\",\r\n        \"score\": 6,\r\n        \"answers\": [\r\n          0,\r\n          1,\r\n          2\r\n        ],\r\n        \"hasOtherOption\": true,\r\n        \"options\": [\r\n          \"Steve Jobs\",\r\n          \"Steve Wozniak\",\r\n          \"Ronald Wayne\",\r\n          \"Ronald Reagan\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/quizzes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"quizzes"
					]
				}
			},
			"response": []
		},
		{
			"name": "/assignment-[T]-createAssignment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"assignmentId\", jsonData[jsonData.length-1].id);\r",
							"\r",
							"pm.environment.set(\"assignmentGroupID\", jsonData[jsonData.length-1].assignmentGroupID);\r",
							"\r",
							"\r",
							"pm.test(\"verify status result and graded by in assigned quiz\", function () {\r",
							"    pm.expect(jsonData[jsonData.length-1].status).to.eql(\"ASSIGNED\");\r",
							"     pm.expect(jsonData[jsonData.length-1].result).to.eql(\"PENDING\");\r",
							"      pm.expect(jsonData[jsonData.length-1].gradedBy).to.eql(\"NONE\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenTeacher}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"quizId\": {{quizId}},\r\n  \"userIds\": [{{studentId}}]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/assignment",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "/my-assignments-[S]-list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var myassignment = pm.environment.get(\"assignmentId\");\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"verify assignmentId on the list of assignments\", function () {\r",
							"\tvar jsonData = pm.response.json();\r",
							"\tpm.expect(jsonData[jsonData.length-1].id).to.eql(myassignment);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenStudent}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"id\": 12,\r\n    \"quiz\": {\r\n      \"name\": \"Demo Quiz\",\r\n      \"showStopperQuestion\": 1,\r\n      \"questions\": [\r\n        {\r\n          \"type\": \"TEXTUAL\",\r\n          \"question\": \"What is your name?\"\r\n        },\r\n        {\r\n          \"type\": \"SINGLE_CHOICE\",\r\n          \"question\": \"Which city is city largest in California?\",\r\n          \"hasOtherOption\": false,\r\n          \"options\": [\r\n            \"San Francisco\",\r\n            \"Sacramento\",\r\n            \"Los Angeles\",\r\n            \"Redding\"\r\n          ]\r\n        },\r\n        {\r\n          \"type\": \"MULTIPLE_CHOICE\",\r\n          \"question\": \"Who was apple founded by?\",\r\n          \"hasOtherOption\": true,\r\n          \"options\": [\r\n            \"Steve Jobs\",\r\n            \"Steve Wozniak\",\r\n            \"Ronald Wayne\",\r\n            \"Ronald Reagan\"\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    \"createdAt\": \"2018-04-03T15:47:02.524Z\"\r\n  }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/my-assignments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"my-assignments"
					]
				}
			},
			"response": []
		},
		{
			"name": "/submit-assignment-[S]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"verify status and graded by after student submission\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[jsonData.length-1].status).to.eql(\"GRADED\");\r",
							"    pm.expect(jsonData[jsonData.length-1].result).to.eql(\"PASSED\");\r",
							"\t\tpm.expect(jsonData[jsonData.length-1].gradedBy).to.eql(\"AUTOMATIC\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenStudent}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"assignmentId\": {{assignmentId}},\r\n  \"answers\": [\r\n    {\r\n       \"textAnswer\": \"remus\",\r\n    \"answer\": null\r\n  },\r\n  {\r\n    \"textAnswer\": \"\",\r\n    \"answer\": 2\r\n  },\r\n  {\r\n    \"textAnswer\": \"\",\r\n    \"answer\": [\r\n      0,\r\n      1,\r\n      2\r\n    ]\r\n    }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/submit-assignment",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"submit-assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "/my-grades-[S]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"verify status and graded by after manual grading\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[jsonData.length-1].status).to.eql(\"GRADED\");\r",
							"    pm.expect(jsonData[jsonData.length-1].result).to.eql(\"PASSED\");\r",
							"\t\tpm.expect(jsonData[jsonData.length-1].gradedBy).to.eql(\"AUTOMATIC\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenStudent}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/my-grades",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"my-grades"
					]
				}
			},
			"response": []
		},
		{
			"name": "/assignment/assignmentGroupID-[T]-delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"message = Assignment was deleted\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Assignment was deleted\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenTeacher}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/assignment/{{assignmentGroupID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"assignment",
						"{{assignmentGroupID}}"
					]
				}
			},
			"response": []
		}
	]
}